/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB         &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LEFT_SHIFT  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL       &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                              &kp LGUI  &mo 2  &kp SPACE    &kp RET  &mo 1  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans        &kp HOME        &kp UP_ARROW    &kp END          &trans       &kp K_UNDO    &kp K_AGAIN  &trans    &trans     &trans  &kp BSPC
&trans  &trans        &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans       &kp LEFT      &kp DOWN     &kp UP    &kp RIGHT  &trans  &kp LEFT_SHIFT
&trans  &kp NUMBER_1  &kp NUMBER_2    &kp NUMBER_3    &kp NUMBER_4     &kp N5       &kp NUMBER_6  &kp N7       &kp N8    &kp N9     &kp N0  &trans
                                      &kp LGUI        &trans           &kp SPACE    &kp RET       &trans       &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCLAMATION  &kp AT    &kp PERCENT        &kp PIPE        &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp AMPS         &kp ASTRK      &kp EQUAL                 &kp QUESTION  &kp BSPC
&kp LCTRL  &kp HASH         &kp PIPE  &kp COLON          &kp LEFT_BRACE  &kp LEFT_BRACKET        &kp RIGHT_BRACKET      &kp RIGHT_BRACE  &kp SEMICOLON  &kp EXCLAMATION           &trans        &trans
&kp LSHFT  &kp GRAVE        &kp SQT   &kp DOUBLE_QUOTES  &kp PLUS        &kp LESS_THAN           &kp GREATER_THAN       &kp MINUS        &kp TILDE      &kp RS(NON_US_BACKSLASH)  &trans        &kp RIGHT_SHIFT
                                      &kp LGUI           &trans          &kp SPACE               &kp RET                &trans           &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&kp F1      &kp F2      &kp F3      &kp F4  &kp F5             &kp F6              &kp F7            &kp F8  &kp F9  &kp F10          &kp F11  &kp F12
&trans      &trans      &kp DELETE  &trans  &kp K_STOP         &kp K_PLAY_PAUSE    &trans            &trans  &trans  &kp PRINTSCREEN  &trans   &trans
&kp K_PREV  &kp C_NEXT  &kp C_MUTE  &trans  &kp C_VOLUME_DOWN  &kp C_VOL_UP        &kp K_CALCULATOR  &trans  &trans  &trans           &trans   &trans
                                    &trans  &trans             &trans              &trans            &trans  &trans
            >;
        };
    };
};
